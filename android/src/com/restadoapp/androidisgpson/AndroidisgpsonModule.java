/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.restadoapp.androidisgpson;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import java.lang.RuntimeException;
import java.io.PrintWriter; 
import java.io.StringWriter;

import android.content.Context;
import android.location.LocationManager;


@Kroll.module(name="Androidisgpson", id="com.restadoapp.androidisgpson")
public class AndroidisgpsonModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "AndroidisgpsonModule";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public AndroidisgpsonModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}


	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}
	
	public static String getStackTrace(final Throwable throwable) {
        final StringWriter sw = new StringWriter();
        final PrintWriter pw = new PrintWriter(sw, true);
        throwable.printStackTrace(pw);
        return sw.getBuffer().toString();
    }   
    
    @Kroll.method
    public boolean getGPSState() {
    	
    	TiApplication context = TiApplication.getInstance();
    	
        LocationManager manager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
        
        boolean statusOfGPS = manager.isProviderEnabled(LocationManager.GPS_PROVIDER);
        
        return statusOfGPS;
    }
    
    @Kroll.method
    public boolean getNetworkProviderState() {
    	
    	TiApplication context = TiApplication.getInstance();
    	
        LocationManager manager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
        
        return manager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
    }
}

